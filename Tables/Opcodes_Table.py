import duckdb
import sys

def opcodes_Table(duckpath):
    instructions = [
        ("0", "00", "STOP"),
        ("1", "01", "ADD"),
        ("2", "02", "MUL"),
        ("3", "03", "SUB"),
        ("4", "04", "DIV"),
        ("5", "05", "SDIV"),
        ("6", "06", "MOD"),
        ("7", "07", "SMOD"),
        ("8", "08", "ADDMOD"),
        ("9", "09", "MULMOD"),
        ("10", "0a", "EXP"),
        ("11", "0b", "SIGNEXTEND"),
        ("12", "0c", "LT"),
        ("13", "0d", "GT"),
        ("14", "0e", "SLT"),
        ("15", "0f", "SGT"),
        ("16", "10", "EQ"),
        ("17", "11", "ISZERO"),
        ("18", "12", "AND"),
        ("19", "13", "OR"),
        ("20", "14", "XOR"),
        ("21", "15", "NOT"),
        ("22", "16", "BYTE"),
        ("23", "17", "SHL"),
        ("24", "18", "SHR"),
        ("25", "19", "SAR"),
        ("26", "1a", "SHA3"),
        ("27", "1b", "ADDRESS"),
        ("28", "1c", "BALANCE"),
        ("29", "1d", "ORIGIN"),
        ("30", "1e", "CALLER"),
        ("31", "1f", "CALLVALUE"),
        ("32", "20", "CALLDATALOAD"),
        ("33", "21", "CALLDATASIZE"),
        ("34", "22", "CALLDATACOPY"),
        ("35", "23", "CODESIZE"),
        ("36", "24", "CODECOPY"),
        ("37", "25", "GASPRICE"),
        ("38", "26", "EXTCODESIZE"),
        ("39", "27", "EXTCODECOPY"),
        ("40", "28", "RETURNDATASIZE"),
        ("41", "29", "RETURNDATACOPY"),
        ("42", "2a", "EXTCODEHASH"),
        ("43", "2b", "BLOCKHASH"),
        ("44", "2c", "COINBASE"),
        ("45", "2d", "TIMESTAMP"),
        ("46", "2e", "NUMBER"),
        ("47", "2f", "DIFFICULTY"),
        ("48", "30", "GASLIMIT"),
        ("49", "31", "CHAINID"),
        ("50", "32", "SELFBALANCE"),
        ("51", "33", "BASEFEE"),
        ("52", "34", "POP"),
        ("53", "35", "MLOAD"),
        ("54", "36", "MSTORE"),
        ("55", "37", "MSTORE8"),
        ("56", "38", "SLOAD"),
        ("57", "39", "SSTORE"),
        ("58", "3a", "JUMP"),
        ("59", "3b", "JUMPI"),
        ("60", "3c", "PC"),
        ("61", "3d", "MSIZE"),
        ("62", "3e", "GAS"),
        ("63", "3f", "JUMPDEST"),
        ("64", "40", "PUSH1"),
        ("65", "41", "PUSH2"),
        ("66", "42", "PUSH3"),
        ("67", "43", "PUSH4"),
        ("68", "44", "PUSH5"),
        ("69", "45", "PUSH6"),
        ("70", "46", "PUSH7"),
        ("71", "47", "PUSH8"),
        ("72", "48", "PUSH9"),
        ("73", "49", "PUSH10"),
        ("74", "4a", "PUSH11"),
        ("75", "4b", "PUSH12"),
        ("76", "4c", "PUSH13"),
        ("77", "4d", "PUSH14"),
        ("78", "4e", "PUSH15"),
        ("79", "4f", "PUSH16"),
        ("80", "50", "PUSH17"),
        ("81", "51", "PUSH18"),
        ("82", "52", "PUSH19"),
        ("83", "53", "PUSH20"),
        ("84", "54", "PUSH21"),
        ("85", "55", "PUSH22"),
        ("86", "56", "PUSH23"),
        ("87", "57", "PUSH24"),
        ("88", "58", "PUSH25"),
        ("89", "59", "PUSH26"),
        ("90", "5a", "PUSH27"),
        ("91", "5b", "PUSH28"),
        ("92", "5c", "PUSH29"),
        ("93", "5d", "PUSH30"),
        ("94", "5e", "PUSH31"),
        ("95", "5f", "PUSH32"),
        ("96", "60", "DUP1"),
        ("97", "61", "DUP2"),
        ("98", "62", "DUP3"),
        ("99", "63", "DUP4"),
        ("100", "64", "DUP5"),
        ("101", "65", "DUP6"),
        ("102", "66", "DUP7"),
        ("103", "67", "DUP8"),
        ("104", "68", "DUP9"),
        ("105", "69", "DUP10"),
        ("106", "6a", "DUP11"),
        ("107", "6b", "DUP12"),
        ("108", "6c", "DUP13"),
        ("109", "6d", "DUP14"),
        ("110", "6e", "DUP15"),
        ("111", "6f", "DUP16"),
        ("112", "70", "SWAP1"),
        ("113", "71", "SWAP2"),
        ("114", "72", "SWAP3"),
        ("115", "73", "SWAP4"),
        ("116", "74", "SWAP5"),
        ("117", "75", "SWAP6"),
        ("118", "76", "SWAP7"),
        ("119", "77", "SWAP8"),
        ("120", "78", "SWAP9"),
        ("121", "79", "SWAP10"),
        ("122", "7a", "SWAP11"),
        ("123", "7b", "SWAP12"),
        ("124", "7c", "SWAP13"),
        ("125","7d", "SWAP14"),
        ("126", "7e", "SWAP15"),
        ("127", "7f", "SWAP16"),
        ("128", "80", "LOG0"),
        ("129", "81", "LOG1"),
        ("130", "82", "LOG2"),
        ("131", "83", "LOG3"),
        ("132", "84", "LOG4"),
        ("133", "f0", "CREATE"),
        ("134", "f1", "CALL"),
        ("135", "f2", "CALLCODE"),
        ("136", "f3", "RETURN"),
        ("137", "f4", "DELEGATECALL"),
        ("138", "f5", "CREATE2"),
        ("139", "fa", "STATICCALL"),
        ("140", "fd", "REVERT"),
    ]
    con = duckdb.connect(database=duckpath, read_only=False)
    con.sql(f"DROP TABLE IF EXISTS opcodes")
    con.sql(f"CREATE TABLE opcodes (id INT PRIMARY KEY, opcode CHAR, name VARCHAR)")
    for instruction in instructions:
        con.execute(f"INSERT INTO opcodes (id, opcode, name) VALUES ('{instruction[0]}', '{instruction[1]}', '{instruction[2]}')")
    con.close()

if __name__ == "__main__":
    duckpath='~/√Årea de Trabalho/Ethereum_Dataset/Databases/Ethereum_Database'
    opcodes_Table(duckpath)
